<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.closertag.smartmove.server</groupId>
	<artifactId>Smartmove_server</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>Smartmove Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<junit.version>4.8.1</junit.version>
		<jaxb.root>${project.build.directory}/generated-sources/jaxb</jaxb.root>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>

		<hibernate.version>3.2.6.ga</hibernate.version>
		<hibernate-annotations.version>
			3.3.0.ga
		</hibernate-annotations.version>
		<geotools.version>2.6.1</geotools.version>

	</properties>
	<!-- Repository for hibernate spazial -->
	<repositories>
		<repository>
			<id>GeoTools repo</id>
			<url>http://maven.geotools.fr/repository</url>
		</repository>

		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>http://download.osgeo.org/webdav/geotools/</url>
		</repository>
		<repository>
			<id>Hibernate Spatial repo</id>
			<url>http://www.hibernatespatial.org/repository</url>
		</repository>
	</repositories>


	<pluginRepositories>

		<pluginRepository>
			<id>maven-repository.dev.java.net</id>
			<name>Java.net Maven 1 Repository (legacy)</name>
			<url>http://download.java.net/maven/1</url>
			<layout>legacy</layout>
		</pluginRepository>


		<pluginRepository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2
            </url>
		</pluginRepository>
	</pluginRepositories>


	<dependencies>
		<!-- Jaxb dependencies -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- dependency> <groupId>com.sun.xml.bind</groupId> <artifactId>jaxb-impl</artifactId> 
			<version>2.1.3</version> </dependency -->


		<!-- Apache Xml Rpc -->
		<dependency>
			<groupId>org.apache.xmlrpc</groupId>
			<artifactId>xmlrpc-client</artifactId>
			<version>3.1.2</version>
		</dependency>

		<!-- Hibernate and Hibernate Spatial -->
		<dependency>
			<groupId>org.hibernatespatial</groupId>
			<!-- artifactId>hibernate-spatial-mysql</artifactId -->
			<artifactId>hibernate-spatial-postgis</artifactId>

			<version>1.0-M2</version>
			<exclusions>
				<exclusion>
					<groupId>postgresql</groupId>
					<artifactId>postgresql</artifactId>
				</exclusion>

				<exclusion>
					<groupId>org.postgis</groupId>
					<artifactId>postgis-jdbc</artifactId>
				</exclusion>

				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>8.3-603.jdbc4</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.postgis</groupId>
			<artifactId>postgis-jdbc</artifactId>
			<version>1.1.6</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.postgis</groupId>
			<artifactId>postgis-jdbc-jts</artifactId>
			<version>1.1.6</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>${hibernate-annotations.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>${hibernate-annotations.version}</version>
		</dependency>

		<!-- Spring -->
		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>





		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>


		<!-- Quartz -->
		<dependency>
			<groupId>quartz</groupId>
			<artifactId>quartz</artifactId>
			<version>1.5.2</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>

		</dependency>
		<dependency>
			<artifactId>servlet-api</artifactId>
			<groupId>javax.servlet</groupId>
			<version>2.3</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.6.2</version>
		</dependency>
		<!-- Open Geo -->
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-shapefile</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.media</groupId>
			<artifactId>jai_core</artifactId>
			<version>1.1.3</version>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-lgpl</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-lgpl</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-xc</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- ROME -->
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>0.9</version>
		</dependency>
		


		<!-- Test dependencies -->
		<!-- TEST DEPENDENCIES -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>





	</dependencies>
	<build>
		<finalName>smartmove</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
				    <encoding>UTF-8</encoding>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven</groupId>
						<artifactId>maven-plugin-tools-ant</artifactId>
						<version>2.0.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<generatePackage>com.wimove.content.protocol</generatePackage>
					<includeSchemas>
						<includeSchema>**/*.xsd</includeSchema>
						<includeSchema>**/*.dtd</includeSchema>
					</includeSchemas>
					<excludeSchemas>
						<excludeSchema>test*.xsd</excludeSchema>
					</excludeSchemas>
					<includeBindings>
						<includeBinding>*.xjb</includeBinding>
					</includeBindings>
					<strict>false</strict>
					<verbose>true</verbose>
				</configuration>
			</plugin>


			<!-- mvn tomcat:deploy -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<contextFile>
						src/production/context.xml
					</contextFile>
				</configuration>
			</plugin>
			<!-- <plugin> <artifactId>maven-antrun-plugin</artifactId> <dependencies> 
				<dependency> <groupId>org.codehaus.cargo</groupId> <artifactId>cargo-ant</artifactId> 
				<version>1.0-alpha-2</version> </dependency> </dependencies> <executions> 
				<execution> <phase>generate-sources</phase> <configuration> <sourceRoot>${jaxb.root}</sourceRoot> 
				<tasks> <mkdir dir="${jaxb.root}" /> <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask"> 
				<classpath refid="maven.compile.classpath" /> </taskdef> <xjc destdir="${jaxb.root}" 
				extension="true"> <arg line="-no-header" /> <schema dir="${basedir}/src/main/resources" 
				includes="wimove_api.xsd" /> <binding dir="${basedir}/src/main/resources" 
				includes="*.xjb" /> <produces dir="${jaxb.root}" includes="com/wimove/content/protocol/*.java" 
				/> </xjc> </tasks> </configuration> <goals> <goal>run</goal> </goals> </execution> 
				</executions> </plugin> -->
		</plugins>
	</build>



	<!-- REPORTING -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.6.1</version>
				<configuration>
					<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>

					<!-- <docletPath>/path/to/UmlGraph.jar</docletPath> -->
					<docletArtifact>
						<groupId>org.umlgraph</groupId>
						<artifactId>doclet</artifactId>
						<version>5.1</version>
					</docletArtifact>
					<additionalparam>-views</additionalparam>
					<useStandardDocletOptions>true</useStandardDocletOptions>
					<excludePackageNames>com.google.*:com.wimove.protocol.*:com.wimove.constant.*:com.wimove.service.*:com.wimove.content.domain.*:com.wimove.content.exception.*:com.wimove.content.geometry.*:com.wimove.content.hibernate.*:com.wimove.content.hibernate.*:com.wimove.content.http.*:com.wimove.content.service.*:com.wimove.content.timer.*:com.wimove.content.utils.*:com.wimove.content.protocol.*</excludePackageNames>
				</configuration>
			</plugin>

		</plugins>
	</reporting>





</project>
